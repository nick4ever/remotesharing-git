<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:task="http://www.springframework.org/schema/task"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd		
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-3.0.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
        http://www.springframework.org/schema/task
        http://www.springframework.org/schema/task/spring-task-3.0.xsd">
        
        
    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="ignoreResourceNotFound" value="true" />
        <property name="systemPropertiesMode" value="2" />
        <property name="locations">
            <list>
                <value>classpath:db.properties</value>
            </list>
        </property>
    </bean>
    
    <bean id="dataSource"
        class="org.apache.commons.dbcp.BasicDataSource">
        <property name="driverClassName"
            value="org.postgresql.Driver" />




        <property name="url"
            value="jdbc:postgresql://${db.host}:${db.port}/${db.name}" />
            
        <!-- 
            For personal configuration of database name, create a file at:
            ${user.home}/evomed-trunk.properties and define the db.name there.
            
            The default value for this parameter when the above file is missing is 'openpractice'
         -->




            
            
            
        <property name="username" value="${db.user}" />
        <property name="password" value="${db.password}" />
        
        <!-- The number of connections created when the pool is started. -->
        <property name="initialSize" value="3" />
        
        <!-- The maximum number of connections that can be allocated
            from the pool at the same time. If zero, there is no limit. -->
        <property name="maxActive" value="15" />
        
        <!-- The maximum number of connections that can be idle in
            the pool without extras being released. If zero, there is no limit. -->
        <property name="maxIdle" value="15" />
        
        <property name="validationQuery" value="SELECT 1" />
        
        <property name="testOnBorrow" value="true" />
        
        <property name="testOnReturn" value="true" />
        
        <property name="removeAbandoned" value="true" />
        
        <property name="removeAbandonedTimeout" value="300" />
        
        <!-- Whether or not to pool prepared statements (boolean) -->
        <property name="poolPreparedStatements" value="false" />
        
        <!-- The maximum number of prepared statements that can be
            allocated from the statement pool at the same time. If
            zero, there is no limit. -->
        <property name="maxOpenPreparedStatements" value="100" />
        
        <!-- How long the pool will wait for a connection to be returned
            to the pool (when there are no available connections)
            before an exception is thrown. If â€“1, wait indefinitely. -->
        <property name="maxWait" value="-1" />
        
        <!-- How long a connection can remain idle in the pool before
            it is eligible for eviction. -->
        <!--  <property name="minEvictableIdleTimeMillis" value="120000" /> -->
        
        <!-- The minimum number of connections that can remain idle 
            in the pool without new connections being created. -->
        <property name="minIdle" value="2" />
    </bean>
    <!-- Database Property -->
    <bean id="hibernateProperties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
        <property name="properties">
            <props>
                <prop key="hibernate.hbm2ddl.auto">update</prop>
                <prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQLDialect</prop>
                <prop key="hibernate.format_sql">true</prop>
                <prop key="hibernate.show_sql">false</prop>
                <prop key="hibernate.cache.use_second_level_cache">true</prop>
                <prop key="hibernate.cache.provider_class">net.sf.ehcache.hibernate.EhCacheProvider</prop>
                <prop key="hibernate.current_session_context_class">thread</prop>
            </props>
        </property>
    </bean>
    
    <!-- Hibernate Session Factory -->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="hibernateProperties" ref="hibernateProperties" />
        <property name="mappingLocations">
            <list>
                <value>classpath*:/vn/evolus/simpleapi/mappings/*.hbm.xml</value>
            </list>
        </property>
    </bean>

    <!-- Transaction Management -->
    <bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
        <property name="sessionFactory">
            <ref local="sessionFactory" />
        </property>
    </bean>
    <tx:annotation-driven transaction-manager="transactionManager" />
    
</beans>
